{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/images/og-react.jpg","webpack:///./src/templates/blogPost.js"],"names":["navStyles","display","flexDirection","alignItems","boxSizing","HeaderBody","siteTitle","data","site","siteMetadata","title","id","className","to","style","href","Header","query","render","module","exports","heroImageStyle","position","top","left","width","height","objectFit","objectPosition","transitionDelay","BlogPost","pageContext","markdownRemark","frontmatter","html","next","prev","src","heroImage","dangerouslySetInnerHTML","__html","marginBottom","fontFamily","path"],"mappings":"8ZAGMA,EAAY,CAChBC,QAAS,OACTC,cAAe,MACfC,WAAY,WACZC,UAAW,cAEPC,EAAa,SAAC,GAAc,IAE1BC,EAFyB,EAAXC,KAEGC,KAAKC,aAAaC,MAC1C,OAEG,4BAAQC,GAAG,SAASC,UAAU,UAC1B,kBAAC,OAAD,CAAMC,GAAG,IAAID,UAAU,QACpBN,GAEJ,yBAAKM,UAAU,eACZ,yBAAKE,MAAOd,GACV,uBAAGY,UAAU,WAAWG,KAAK,UAA7B,SACA,uBAAGH,UAAU,WAAWG,KAAK,UAA7B,SACA,uBAAGH,UAAU,WAAWG,KAAK,WAA7B,cAyBKC,IAlBF,WAEb,OACE,kBAAC,cAAD,CACAC,MAAK,aAULC,OAAQ,SAAAX,GAAI,OAAI,kBAACF,EAAD,CAAYE,KAAMA,KAXlC,W,qBChCJY,EAAOC,QAAU,IAA0B,wD,kCCA3C,mHAcMC,EAAiB,CACrBC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,UAAW,QACXC,eAAgB,gBAChBC,gBAAiB,SAiDNZ,EAAK,aAWHa,UA1DE,SAAC,GAA2B,IAAzBvB,EAAwB,EAAxBA,KAAMwB,EAAkB,EAAlBA,YAEdC,EAAmBzB,EAAnByB,eACFtB,EAAQsB,EAAeC,YAAYvB,MACnCwB,EAAQF,EAAeE,KACtBC,EAAcJ,EAAdI,KAAMC,EAAQL,EAARK,KAEb,OAEA,yBAAKxB,UAAU,WACX,kBAAC,IAAD,MAEA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iBAEX,iCACE,yBAAKD,GAAG,aAAcG,MAAOO,EAAiBgB,IAAKC,QAKxD,4BAAK5B,GACJ,yBAAKE,UAAU,cACd,6BAASD,GAAG,OAAOC,UAAU,QAC3B,yBAAKA,UAAW,WACb2B,wBAAyB,CAACC,OAAQN,MAGxC,yBAAKpB,MAAO,CAAC2B,aAAc,OAAQC,WAAY,WAC5CP,GACC,kBAAC,OAAD,CAAMtB,GAAIsB,EAAKF,YAAYU,MAA3B,YACYR,EAAKF,YAAYvB,QAIjC,yBAAKI,MAAO,CAAC4B,WAAY,WACtBN,GACC,kBAAC,OAAD,CAAMvB,GAAIuB,EAAKH,YAAYU,MAA3B,YACYP,EAAKH,YAAYvB","file":"component---src-templates-blog-post-js-57dd48f6482ad7613578.js","sourcesContent":["import { StaticQuery, graphql, Link } from \"gatsby\";\nimport React from \"react\";\n\nconst navStyles = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"baseline\",\n  boxSizing: \"border-box\"\n}\nconst HeaderBody = ({ data }) => {\n  \n  const siteTitle = data.site.siteMetadata.title;\n return (\n    \n    <header id=\"header\" className=\"header\">\n        <Link to=\"/\" className=\"logo\">\n          {siteTitle}\n        </Link> \n       <div className=\"nav-wrapper\">\n          <nav style={navStyles}>\n            <a className=\"nav-link\" href=\"/about\">About</a>\n            <a className=\"nav-link\" href=\"/blogs\">Blogs</a>\n            <a className=\"nav-link\" href=\"/photos\">Photos</a>\n          </nav>\n        </div>\n  </header>\n )\n  \n}\nconst Header = () => {\n  \n  return (\n    <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => <HeaderBody data={data} />}\n  />\n  )\n}\n  export default Header;","module.exports = __webpack_public_path__ + \"static/og-react-b26b8cc4beaacef97e394c537eec4752.jpg\";","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Header from \"../components/header\";\nimport heroImage from \"../images/og-react.jpg\";\n\nconst heroStyles = {\n  width: \"100%\",\n  height: \"400px\",\n  backgroundSize: \"cover\",\n  objectPosition: \"center center\",\n  opacity: \"1\",\n  transition: \"opacity 500ms ease 0s\"\n}\n\nconst heroImageStyle = {\n  position: \"relative\",\n  top: \"0px\",\n  left: \"0px\",\n  width: \"100%\",\n  height: \"100%\",\n  objectFit: \"cover\",\n  objectPosition: \"center center\",\n  transitionDelay: \"500ms\"\n}\nconst BlogPost = ( {data, pageContext} ) => {\n    \n    const { markdownRemark } = data;\n    const title = markdownRemark.frontmatter.title;\n    const html =  markdownRemark.html;\n    const {next, prev} = pageContext;\n\n    return (\n       \n    <div className=\"wrapper\"> \n        <Header/>\n        \n        <div className=\"container\">\n          <div className=\"image-wrapper\">\n           \n              <picture>\n                <img id=\"hero-image\"  style={heroImageStyle}  src={heroImage}/>\n              </picture>\n              \n              \n           </div>\n           <h1>{title}</h1>\n            <div className=\"blog-hero\" />\n             <section id=\"hero\" className=\"hero\">\n               <div className ='blogpost'\n                  dangerouslySetInnerHTML={{__html: html}}\n               />\n             </section>\n            <div style={{marginBottom: '1rem', fontFamily: 'avenir'}}>\n              {next &&\n                <Link to={next.frontmatter.path}>\n                  Next: {`${next.frontmatter.title}`}\n                </Link>\n              }\n            </div>\n            <div style={{fontFamily: 'avenir'}}>\n              {prev &&\n                <Link to={prev.frontmatter.path}>\n                  Prev: {`${prev.frontmatter.title}`}\n                </Link>\n              }\n            </div>\n      </div>\n    </div>\n    )\n}\n\nexport const query = graphql`\n   query($pathSlug: String!){\n     markdownRemark(frontmatter: { path: { eq: $pathSlug }}) {\n       html\n       frontmatter{\n           title\n       }\n     }\n  }\n`\n\nexport default BlogPost;"],"sourceRoot":""}