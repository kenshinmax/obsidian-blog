{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/templates/blogPost.js"],"names":["navStyles","display","flexDirection","alignItems","boxSizing","marginTop","HeaderBody","siteTitle","data","site","siteMetadata","title","id","className","to","style","href","Header","query","render","heroImageStyle","position","top","left","width","height","objectFit","objectPosition","transitionDelay","BlogPost","pageContext","markdownRemark","frontmatter","featuredImgFluid","subtitle","featuredImage","html","next","prev","src","dangerouslySetInnerHTML","__html","marginBottom","fontFamily","path"],"mappings":"2FAAA,qCAGMA,EAAY,CAChBC,QAAS,OACTC,cAAe,MACfC,WAAY,WACZC,UAAW,aACXC,UAAW,SAEPC,EAAa,SAAC,GAAc,IAE1BC,EAFyB,EAAXC,KAEGC,KAAKC,aAAaC,MAC1C,OAEG,4BAAQC,GAAG,SAASC,UAAU,UAC1B,kBAAC,OAAD,CAAMC,GAAG,IAAID,UAAU,QACpBN,GAEJ,yBAAKM,UAAU,eACZ,yBAAKE,MAAOf,GACV,uBAAGa,UAAU,WAAWG,KAAK,UAA7B,SACA,uBAAGH,UAAU,WAAWG,KAAK,UAA7B,SACA,uBAAGH,UAAU,WAAWG,KAAK,WAA7B,cAyBKC,IAlBF,WAEb,OACE,kBAAC,cAAD,CACAC,MAAK,aAULC,OAAQ,SAAAX,GAAI,OAAI,kBAACF,EAAD,CAAYE,KAAMA,S,kCC5CtC,wDAaMY,EAAiB,CACrBC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,UAAW,QACXC,eAAgB,gBAChBC,gBAAiB,SAwDJC,UAtDE,SAAC,GAA2B,IAAzBrB,EAAwB,EAAxBA,KAAMsB,EAAkB,EAAlBA,YAChBC,EAAmBvB,EAAnBuB,eACR,EAA0BA,EAAeC,YAAlCrB,EAAP,EAAOA,MACDsB,GADN,EAAcC,SACcH,EAAeC,YAAYG,cAAjDF,kBACAG,EAAOL,EAAeK,KACpBC,EAAeP,EAAfO,KAAMC,EAASR,EAATQ,KAEd,OACE,yBAAKzB,UAAU,WACb,kBAAC,IAAD,MACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iBACb,iCACE,yBAAKD,GAAG,aAAaG,MAAOK,EAAgBmB,IAAKN,MAGrD,4BAAKtB,GACL,yBAAKE,UAAU,cACf,6BAASD,GAAG,OAAOC,UAAU,QAC3B,yBACEA,UAAU,WACV2B,wBAAyB,CAAEC,OAAQL,MAGvC,yBAAKrB,MAAO,CAAE2B,aAAc,OAAQC,WAAY,WAC7CN,GACC,kBAAC,OAAD,CAAMvB,GAAIuB,EAAKL,YAAYY,MAA3B,YACYP,EAAKL,YAAYrB,QAIjC,yBAAKI,MAAO,CAAE4B,WAAY,WACvBL,GACC,kBAAC,OAAD,CAAMxB,GAAIwB,EAAKN,YAAYY,MAA3B,YACYN,EAAKN,YAAYrB","file":"component---src-templates-blog-post-js-761d17bdf9d23ac7a6de.js","sourcesContent":["import { StaticQuery, graphql, Link } from \"gatsby\";\nimport React from \"react\";\n\nconst navStyles = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"baseline\",\n  boxSizing: \"border-box\",\n  marginTop: \"0.9em\"\n}\nconst HeaderBody = ({ data }) => {\n  \n  const siteTitle = data.site.siteMetadata.title;\n return (\n    \n    <header id=\"header\" className=\"header\">\n        <Link to=\"/\" className=\"logo\">\n          {siteTitle}\n        </Link> \n       <div className=\"nav-wrapper\">\n          <nav style={navStyles}>\n            <a className=\"nav-link\" href=\"/about\">About</a>\n            <a className=\"nav-link\" href=\"/blogs\">Blogs</a>\n            <a className=\"nav-link\" href=\"/photos\">Photos</a>\n          </nav>\n        </div>\n  </header>\n )\n  \n}\nconst Header = () => {\n  \n  return (\n    <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => <HeaderBody data={data} />}\n  />\n  )\n}\n  export default Header;","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Header from \"../components/header\";\n\nconst heroStyles = {\n  width: \"100%\",\n  height: \"400px\",\n  backgroundSize: \"cover\",\n  objectPosition: \"center center\",\n  opacity: \"1\",\n  transition: \"opacity 500ms ease 0s\",\n};\n\nconst heroImageStyle = {\n  position: \"relative\",\n  top: \"0px\",\n  left: \"0px\",\n  width: \"100%\",\n  height: \"100%\",\n  objectFit: \"cover\",\n  objectPosition: \"center center\",\n  transitionDelay: \"500ms\",\n};\nconst BlogPost = ({ data, pageContext }) => {\n  const { markdownRemark } = data;\n  const {title, subtitle} = markdownRemark.frontmatter;\n  let { featuredImgFluid }  = markdownRemark.frontmatter.featuredImage;\n  const html = markdownRemark.html;\n  const { next, prev } = pageContext; \n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <div className=\"box container\">\n        <div className=\"image-wrapper\">\n          <picture>\n            <img id=\"hero-image\" style={heroImageStyle} src={featuredImgFluid} />\n          </picture>\n        </div>\n        <h1>{title}</h1>\n        <div className=\"blog-hero\" />\n        <section id=\"hero\" className=\"hero\">\n          <div\n            className=\"blogpost\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </section>\n        <div style={{ marginBottom: \"1rem\", fontFamily: \"avenir\" }}>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              Next: {`${next.frontmatter.title}`}\n            </Link>\n          )}\n        </div>\n        <div style={{ fontFamily: \"avenir\" }}>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Prev: {`${prev.frontmatter.title}`}\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n\nexport default BlogPost;\n"],"sourceRoot":""}